dev:
  # The container definition we want to use for developing our app
  box:
    id: golang:latest
    cmd: /bin/sh
  steps:
    - internal/watch:
        code: |
          CGO_ENABLED=0 go build -o cloud-native-go
          ./cloud-native-go
        reload: true

build:
  # The container definition we want to use for building our app
  box:
    id: golang:latest
    cmd: /bin/sh
  steps:
    - wercker/golint
    - script:
        name: install git
        code: apk upgrade && apk update && apk add git
    - script:
        name: go build
        code: |
          go get github.com/iris-contrib/cloud-native-go
          CGO_ENABLED=0 go build -o cloud-native-go
    - script:
        name: copy binary
        code: cp cloud-native-go "$WERCKER_OUTPUT_DIR"
    - script:
        name: copy marathon script
        code: cp marathon.sh "$WERCKER_OUTPUT_DIR"

deploy:
  # The container definition we want to use to run our app
  box: 
    id: alpine:latest
    cmd: /bin/sh
  steps:
    - internal/docker-push:
        author: "Iris Contrib"
        username: $USERNAME
        password: $PASSWORD
        repository: iris-contrib/cloud-native-go
        tag: 1.1.0 $WERCKER_GIT_COMMIT latest 
        registry: https://registry.hub.docker.com
        entrypoint: /pipeline/source/cloud-native-go
        ports: "8080"
    - script:
        name: generate json
        code: chmod +x marathon.sh && ./marathon.sh
    - script:
        name: install curl
        code: apk upgrade && apk update && apk add curl
#    - wercker/marathon-deploy:
#        marathon-url: $MARATHON_URL
#        app-name: $APP_NAME
#        app-json-file: $APP_NAME.json
#        instances: "3"
#        auth-token: $MARATHON_AUTH_TOKEN